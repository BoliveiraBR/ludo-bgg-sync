#!/bin/bash

###################################################################################################
#### Script de Deploy com Configura√ß√£o do Puppeteer/Chrome
#### Automatiza o processo de deploy no AWS Elastic Beanstalk com suporte ao Puppeteer
###################################################################################################

echo "üöÄ Deploy BGG-Ludopedia-Sync com Puppeteer/Chrome"
echo "=================================================="

# Verificar se eb CLI est√° instalado
if ! command -v eb &> /dev/null; then
    echo "‚ùå AWS EB CLI n√£o encontrado. Instale com: pip install awsebcli"
    exit 1
fi

# Verificar se estamos em um projeto EB
if [ ! -f ".elasticbeanstalk/config.yml" ]; then
    echo "‚ùå Diret√≥rio n√£o √© um projeto Elastic Beanstalk"
    echo "üí° Execute 'eb init' primeiro"
    exit 1
fi

echo "‚úÖ Pr√©-requisitos verificados"

# Verificar arquivos necess√°rios
echo ""
echo "üìÅ Verificando arquivos de configura√ß√£o..."

if [ ! -f ".ebextensions/01_chrome_install.config" ]; then
    echo "‚ùå Arquivo .ebextensions/01_chrome_install.config n√£o encontrado"
    exit 1
fi

if [ ! -f "scripts/install-chrome.js" ]; then
    echo "‚ùå Arquivo scripts/install-chrome.js n√£o encontrado"
    exit 1
fi

if [ ! -f "PUPPETEER_SETUP.md" ]; then
    echo "‚ùå Arquivo PUPPETEER_SETUP.md n√£o encontrado"
    exit 1
fi

echo "‚úÖ Arquivos de configura√ß√£o presentes"

# Verificar package.json
echo ""
echo "üì¶ Verificando configura√ß√£o npm..."

if ! grep -q '"puppeteer"' package.json; then
    echo "‚ùå Puppeteer n√£o encontrado no package.json"
    exit 1
fi

if ! grep -q '"postinstall".*puppeteer' package.json; then
    echo "‚ùå Script postinstall n√£o configurado no package.json"
    exit 1
fi

echo "‚úÖ Configura√ß√£o npm verificada"

# Verificar c√≥digo do servidor
echo ""
echo "üîç Verificando c√≥digo do servidor..."

if ! grep -q "const puppeteer = require('puppeteer')" src/interfaces/web/server.js; then
    echo "‚ùå Puppeteer n√£o importado no servidor"
    exit 1
fi

if ! grep -q "puppeteer.launch" src/interfaces/web/server.js; then
    echo "‚ùå Puppeteer.launch n√£o encontrado no c√≥digo"
    exit 1
fi

echo "‚úÖ C√≥digo do servidor verificado"

# Configurar vari√°veis de ambiente recomendadas
echo ""
echo "üîß Configurando vari√°veis de ambiente..."

echo "Configurando NODE_ENV=production..."
eb setenv NODE_ENV=production

echo "Configurando PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true..."
eb setenv PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true

echo "Configurando PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome-stable..."
eb setenv PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome-stable

echo "‚úÖ Vari√°veis de ambiente configuradas"

# Mostrar resumo
echo ""
echo "üìã RESUMO DA CONFIGURA√á√ÉO:"
echo "========================="
echo "‚úÖ Chrome ser√° instalado via .ebextensions/01_chrome_install.config"
echo "‚úÖ Puppeteer configurado para produ√ß√£o"
echo "‚úÖ Scripts de fallback dispon√≠veis"
echo "‚úÖ Tratamento de erros implementado"
echo "‚úÖ Logs detalhados habilitados"

echo ""
echo "‚ö†Ô∏è  IMPORTANTE:"
echo "   - Primeira execu√ß√£o pode ser lenta (instala√ß√£o do Chrome)"
echo "   - Monitor logs com: eb logs --all"
echo "   - Teste endpoint: GET /api/import-bgg-games"

# Confirmar deploy
echo ""
read -p "ü§î Continuar com o deploy? (y/N) " -n 1 -r
echo

if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå Deploy cancelado pelo usu√°rio"
    exit 1
fi

# Executar deploy
echo ""
echo "üöÄ Executando deploy..."
echo "======================="

eb deploy

# Verificar se deploy foi bem-sucedido
if [ $? -eq 0 ]; then
    echo ""
    echo "üéâ Deploy conclu√≠do com sucesso!"
    echo ""
    echo "üìã PR√ìXIMOS PASSOS:"
    echo "==================="
    echo "1. Aguardar 2-3 minutos para Chrome instalar"
    echo "2. Testar endpoint: GET /api/import-bgg-games"
    echo "3. Monitorar logs: eb logs --all"
    echo "4. Verificar health: GET /health"
    echo ""
    echo "üîó Para ver logs em tempo real:"
    echo "   eb logs --all -f"
    echo ""
    echo "üêõ Em caso de problemas:"
    echo "   - Consultar PUPPETEER_SETUP.md"
    echo "   - Executar scripts/install-chrome.js manualmente"
    echo "   - Verificar vari√°veis de ambiente"
    
else
    echo ""
    echo "‚ùå Deploy falhou!"
    echo ""
    echo "üîç DIAGN√ìSTICO:"
    echo "==============="
    echo "1. Verificar logs: eb logs --all"
    echo "2. Verificar status: eb status"
    echo "3. Consultar PUPPETEER_SETUP.md"
    echo ""
    exit 1
fi